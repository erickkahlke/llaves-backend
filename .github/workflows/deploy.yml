name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --only=production
      
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        port: ${{ secrets.PORT }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          # Debug: Check deploy key exists
          ls -la ~/.ssh/deploy_llaves_backend* || echo "Deploy key not found"
          
          # Create directory if it doesn't exist and navigate
          mkdir -p /var/www/html/servilab
          cd /var/www/html/servilab
          
          # Clone repository if it doesn't exist, otherwise navigate to it
          if [ ! -d "llaves" ]; then
            # Set up SSH for GitHub
            export GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_llaves_backend -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
            git clone git@github.com:erickkahlke/llaves-backend.git llaves
          fi
          cd llaves
          
          # Stop the application
          pm2 stop llaves || true
          
          # Configure git to use deploy key
          export GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_llaves_backend -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
          
          # Pull latest changes
          git fetch origin main
          git reset --hard origin/main
          
          # Install/update dependencies
          npm ci --only=production
          
          # Ensure .env exists with production settings
          cat > .env << 'ENVEOF'
          PORT=3006
          NODE_ENV=production
          API_KEY=${{ secrets.API_KEY }}
          TZ=America/Argentina/Buenos_Aires
          ENVEOF
          
          # Ensure storage and logs directories exist
          mkdir -p storage logs
          
          # Restart application
          pm2 start servidor.js --name llaves
          
          # Verify deployment
          sleep 5
          curl -f http://localhost:3006/health || exit 1
          
          echo "âœ… Deployment successful!" 